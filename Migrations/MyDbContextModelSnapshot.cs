// <auto-generated />
using System;
using KuzeyYildizi.Classes;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KuzeyYildizi.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KuzeyYildizi.Classes.Custodian", b =>
                {
                    b.Property<int>("TcNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TcNo"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustodian")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFather")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ParentsLiveTogether")
                        .HasColumnType("bit");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TelNo")
                        .HasColumnType("int");

                    b.HasKey("TcNo");

                    b.ToTable("Custodians");
                });

            modelBuilder.Entity("KuzeyYildizi.Classes.Emergency", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("EmergencyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relativity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TelNo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("EmergencyId");

                    b.ToTable("Emergencies");
                });

            modelBuilder.Entity("KuzeyYildizi.Classes.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Installment")
                        .HasColumnType("int");

                    b.Property<string>("PaymentWeek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("KuzeyYildizi.Classes.Student", b =>
                {
                    b.Property<int>("TcNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TcNo"));

                    b.Property<string>("BirthPlaceAndYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustodianId")
                        .HasColumnType("int");

                    b.Property<string>("Diseases")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmergencyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFatherAlive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMotherAlive")
                        .HasColumnType("bit");

                    b.Property<string>("Medicines")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StudentGender")
                        .HasColumnType("bit");

                    b.Property<int>("StudentGrade")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TelNo")
                        .HasColumnType("int");

                    b.HasKey("TcNo");

                    b.HasIndex("CustodianId");

                    b.HasIndex("PaymentId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("KuzeyYildizi.Classes.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KuzeyYildizi.Classes.Emergency", b =>
                {
                    b.HasOne("KuzeyYildizi.Classes.Student", "Student")
                        .WithMany("Emergencıes")
                        .HasForeignKey("EmergencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("KuzeyYildizi.Classes.Student", b =>
                {
                    b.HasOne("KuzeyYildizi.Classes.Custodian", "Custodian")
                        .WithMany("Students")
                        .HasForeignKey("CustodianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KuzeyYildizi.Classes.Payment", "Payment")
                        .WithOne("Student")
                        .HasForeignKey("KuzeyYildizi.Classes.Student", "PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Custodian");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("KuzeyYildizi.Classes.Custodian", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("KuzeyYildizi.Classes.Payment", b =>
                {
                    b.Navigation("Student")
                        .IsRequired();
                });

            modelBuilder.Entity("KuzeyYildizi.Classes.Student", b =>
                {
                    b.Navigation("Emergencıes");
                });
#pragma warning restore 612, 618
        }
    }
}
